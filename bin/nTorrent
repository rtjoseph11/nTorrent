#!/usr/bin/env node

var argv = require('optimist')
          .alias('d', 'downloadpath')
          .describe('d', 'set downloadpath (e.g /Users/yourname/Downloads/) must end in a /')
          .alias('p', 'port')
          .describe('p', 'set port (default is 6881)')
          .alias('s', 'seed')
          .describe('s', 'set seed (true | false) default is true')
          .argv;
var app = require('../lib/client');
var fs = require('fs');
var config = JSON.parse(fs.readFileSync(__dirname + '/../lib/config.txt'));
if (argv._.length === 0){
  console.log('use ntorrent config with -d/-p/-s to set app configuration \nuse ntorrent [pathtoTorrentFile] to start a download');
} else if (argv._[0] === 'config' && !argv.p && !argv.d && argv.s === undefined){
  console.log(config);
} else if (argv._[0] === 'config'){
  config.port = argv.p ? argv.p : config.port;
  config.downloadpath = argv.d ? argv.d : config.downloadpath;
  config.seed = argv.s ? argv.s : config.seed;
  try {
    fs.writeFileSync(__dirname + '/../lib/config.txt', JSON.stringify(config));
  } catch(e){
    if(e.code === "EACCES"){
      console.log('please rerun this command as root/admin');
    }
  }
} else if (!config.downloadpath){
  console.log('must set downloadpath using ntorrent config -d [yourdownloadpath]');
} else if (!fs.existsSync(config.downloadpath)){
  console.log('your downloadpath ' + config.downloadpath + 'does not exist');
} else if(config.downloadpath[config.downloadpath.length - 1] !== '/'){
  console.log('you downloadpath ' + config.downloadpath + 'does end in /');
} else if(!config.port){
  console.log('must set the port the app will listen on');
} else {
  if(argv._[0] && argv._[0] !== 'test'){
    app.init(argv._[0]);
  } else if (argv._[0] === 'test' && argv._[1] && argv._[2]){
    app.testInit(__dirname + '/../test.torrent', argv._[1].split('.'), argv._[2]);
  }
}

